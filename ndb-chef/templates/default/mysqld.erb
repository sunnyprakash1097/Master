#!/bin/sh
#
# Startup script for mysqld
#
### BEGIN INIT INFO
# Provides:                     mysql*
# Required-Start:                 
# Should-Start:                 
# Required-Stop:                 
# Default-Start:                2 3 4 5
# Default-Stop:                 0 1 6
# Short-Description:            start and stop mysql*
# Description:                  Start/Stop/Restart MySQL Server for NDB
### END INIT INFO

# Variables
START_PROG=<%= "#{node['ndb']['scripts_dir']}/mysql-server-start.sh" %>
STOP_PROG=<%= "#{node['ndb']['scripts_dir']}/mysql-server-stop.sh" %>
RESTART_PROG=<%= "#{node['ndb']['scripts_dir']}/mysql-server-restart.sh" %>
PIDFILE=<%= @pid_file %>
EXEC_WITH_USER="su <%= node['ndb']['user'] %> -c"

init() {
  echo "Executing: $INIT_PROG"
 $EXEC_WITH_USER "$INIT_PROG"
# $INIT_PROG
  return $?
}


start() {
  echo "Executing: $START_PROG"
 $EXEC_WITH_USER $START_PROG
  return $?
}

stop() {
  echo "Executing: $STOP_PROG"
 $STOP_PROG
  return $?
}


restart() {
  echo "Executing: $RESTART_PROG"
 $EXEC_WITH_USER $RESTART_PROG
  return $?
}


status() {
	PID=$( cat "$PIDFILE" 2> /dev/null ) || true

	if test -n "$PID" && kill -0 $PID 2> /dev/null; then
		echo "mysqld ($PID) is running."
		return 0
	else
		PID=$( pidof mysqld ) || true

		if test -n "$PID"; then
			echo "mysqld ($PID) is running."
			return 0
		else
			echo "mysqld is stopped."
		fi
	fi
	exit 1
}


# user-supplied parameter to stop/start/restart process.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  status)
    status
    ;;
  reload)
    restart
    ;;
  -h|--help)
    echo ""
    echo "usage: <prog> start|stop|restart|status"
    echo ""
    exit 0
    ;;
  *)
    echo $"Usage: <prog> {start|stop|restart|status}"
    exit 1
  esac

exit $?
