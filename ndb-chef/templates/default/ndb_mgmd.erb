#!/bin/sh
#
# Startup script for ndbd
#
### BEGIN INIT INFO
# Provides:                     ndb_mgmd*
# Required-Start:                 
# Should-Start:                 
# Required-Stop:                  
# Default-Start:                2 3 4 5
# Default-Stop:                 0 1 6
# Short-Description:            start and stop ndb_mgmd*
# Description:                  Start/Stop/Restart NDB Data Node: ndb_mgmd*
### END INIT INFO

# Variables

START_PROG="<%= node['ndb']['base_dir'] %>/scripts/mgm-server-start.sh" 
STOP_PROG="<%= node['ndb']['base_dir'] %>/scripts/mgm-server-stop.sh"
RESTART_PROG="<%= node['ndb']['base_dir'] %>/scripts/mgm-server-restart.sh"
EXEC_WITH_USER="su <%= node['ndb']['user'] %> -c"
ID=<%= @node_id %>
PID_FILE=<%= "#{node['ndb']['log_dir']}/ndb_${ID}.pid" %> 

start() {
  echo "Executing: $START_PROG"
  $EXEC_WITH_USER $START_PROG
  return $?
}

stop() {
  $STOP_PROG
  PROCESS_ID=`cat $PID_FILE`
  echo "Shutting down"
  kill $PROCESS_ID

  wait_pid_removed=10
  timeout=0
  while [ $timeout -lt $wait_pid_removed ] ; do
    sleep 1
    test ! -s $PID_FILE && break
    echo -n "."
    timeout=`expr $timeout + 1`
  done
  echo ""

  return $?
}

restart() {
  echo "Executing: $RESTART_PROG"
  $EXEC_WITH_USER $RESTART_PROG
  return $?
}

status() { 
  res=1 
  if [ -f $PID_FILE ] ; then
     PID=`cat $PID_FILE`
     kill -0 $PID
     res=$?
  fi
  if [ $res -eq 0 ] ; then
    echo "ndb_mgmd($PID) is running"
  else
    echo "ndb_mgmd is not running"
  fi
  return $res
}


# user-supplied parameter to stop/start/restart process.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  reload)
    restart
    ;;
  status)
    status
    ;;
  -h|--help)
    echo ""
    echo "usage: <prog> start|stop|restart|status"
    echo ""
    exit 0
    ;;
  *)
    echo $"Usage: <prog> {start|stop|restart|status}"
    exit 1
  esac


exit $?
